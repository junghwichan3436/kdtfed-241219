// 변수 = variable
// 변수 = 변할 수 있는 값 =수
// 변수 = 바구니 // 값을 담을 수 있는 그릇//원할 때 마다 값을 넣고 뺄 수 없다!!
// 선언 & 할당

// 변수가 제대로 들어갔는지 체크하는 방법
// 안될 때는 터미널로 체크하기
// 안될 때는 console로 체크하기

// 선언하는 방식 => var (*예약어) (실무에선 아무도 안씀) (이젠 var라는 키워드는 쓰지 않음)
//2015년에 들어오면서 선언하는 방식이 추가됨 => let , const라는 변수가 추가됨
// 모든 변수는 저마다 고유한 이름을 가지고 있다 => 변수명 // 식별자
// 변수를 선언할 거야 라는 키워드 쓰기(num)= > 변수의 이름 또는 식별자 추가하기 =>변수의 값을 할당하기(연산자) 내컴퓨터에 데이터 1이란 걸 생성
// const num = 1;

// console
// 군대에서 메진저 주고 받는 것 (둘만의 통신을 위함)
// 콘솔이라는 객체 말들기 =>log라는 함수를 적어 이함수에 문제가 없는 지 체크 => num이르는 변수를 넣어 체크
// console.log(num);

// const = constant의 약자 =상수(변하지 않고 항상 같은 값을 가지고 있는 수)<->변수
//  const는 재선언 && 재할당 불가

// 변수를 선언하는 순간 => 컴퓨터는 컴퓨터 데이터 (*변수값) => 메모리 영역 할애 => 메모리가 담길 수 있는 방 생성 => 방이름은 식별자 =>일종의 아이디 값으로 똑같은 식별자는 한번밖에 쓸 수 없다 ( 여기서 num은 한번 밖에 못씀)

// 만약 프로젝트를 했을 때 같은 식별자를 쓸 수도 있기 때문에 마지막에 쓴 사람에게 모든데이터가 덮어 씌워 질 수 있다 그러므로 재선언을 되어 지지 않는다!!

// const num = 2;
// 할당
// num = 2;

//프로그래밍언어는 엄격할 수록 안정성이 뛰어나다 => 위험요소가 감소

//재할당을 해야할 때
//let 과 var 변수값을 쓴다

// let이라는 변수값도 재선언이 불가능하다 하지만 재할은 가능하다
// let str = "Hello World";

// console.log(str);

// let str = "Me too";

// str = "Me too";

// console.log(str);

// var
// 트루의 값을 받아야만 되는 프로그램이 폴스 라는 값을 받아야만 되어 진다
// var bool = true;

// console.log(bool);

// var bool = false;
// console.log(bool);

// bool = "Restart";

// console.log(bool);

// num02를 선언을 하고 초기화를 시켜야한다 (선언을 항상 먼저 하기)

// const num01 = 1;

// const result = num01 + num02;

// const num02 = 2;

// console.log(result);
